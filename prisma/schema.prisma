// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider                  = "prisma-erd-generator"
  includeRelationFromFields = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Vessel {
  id           Int                @id @default(autoincrement())
  name         String             @unique
  rs           Int                @unique
  station      Station?           @relation(fields: [stationId], references: [id])
  stationId    Int?
  capabilities VesselCapability[]
  class        VesselClass        @relation(fields: [classId], references: [id])
  classId      Int
  state        VesselState        @relation(fields: [stateId], references: [id])
  stateId      Int
}

model VesselStateCategory {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  inUse       Boolean       @default(true)
  states      VesselState[]
}

model VesselState {
  id              Int                 @id @default(autoincrement())
  name            String              @unique
  description     String?
  inUse           Boolean             @default(true)
  stateCategory   VesselStateCategory @relation(fields: [stateCategoryId], references: [id])
  stateCategoryId Int
  Vessels         Vessel[]
}

model VesselCapability {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  vessels     Vessel[]
}

model VesselClass {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  range   Int
  speed   Int
  vessels Vessel[]
}

model Station {
  id       Int              @id @default(autoincrement())
  name     String           @unique
  address  StationAddress?
  location StationLocation?

  vessels Vessel[]
}

model StationAddress {
  id          Int     @id @default(autoincrement())
  address     String
  zipCode     String
  zipLocation String
  station     Station @relation(fields: [stationId], references: [id])
  stationId   Int     @unique
  type        StationAddressType @relation(fields: [typeId], references: [id])
  typeId      Int
}

model StationAddressType {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  address StationAddress[]
}

model StationLocation {
  id        Int     @id @default(autoincrement())
  latitude  Float
  longitude Float
  station   Station @relation(fields: [stationId], references: [id])
  stationId Int     @unique
}
