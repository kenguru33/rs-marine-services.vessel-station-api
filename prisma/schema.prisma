// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider                  = "prisma-erd-generator"
  includeRelationFromFields = true
  theme                     = "forest"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Vessel {
  id           Int                @id @default(autoincrement())
  name         String             @unique
  rs           Int                @unique
  type         VesselType         @relation(fields: [typeId], references: [id])
  typeId       Int
  station      Station?           @relation(fields: [stationId], references: [id])
  stationId    Int?
  capabilities VesselCapability[]
  class        VesselClass        @relation(fields: [classId], references: [id])
  classId      Int
  state        VesselState        @relation(fields: [stateId], references: [id])
  stateId      Int
}

model VesselType {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  vessels     Vessel[]
}

model VesselStateCategory {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  inUse       Boolean       @default(true)
  states      VesselState[]
}

model VesselState {
  id              Int                 @id @default(autoincrement())
  name            String              @unique
  description     String?
  inUse           Boolean             @default(true)
  stateCategory   VesselStateCategory @relation(fields: [stateCategoryId], references: [id])
  stateCategoryId Int
  Vessels         Vessel[]
}

model VesselCapability {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  vessels     Vessel[]
}

model VesselClass {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  range   Int
  speed   Int
  vessels Vessel[]
}

model Station {
  id                   Int                   @id @default(autoincrement())
  name                 String                @unique
  vessels              Vessel[]
  tilFelt              String?
  address              String
  postalCode           String
  postalLocation       String
  postalBox            Int?
  postalDelivery       String?
  latitude             Float
  longitude            Float
  type                 StationType           @relation(fields: [typeId], references: [id])
  typeId               Int
  agreements           StationAgreement[]
  StationAccommodation StationAccommodation?
  StationPier          StationPier?
}

model StationType {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  stations    Station[]
}

model StationAccommodation {
  id             Int                      @id @default(autoincrement())
  type           StationAccommodationType @relation(fields: [typeId], references: [id])
  typeId         Int
  description    String?
  address        String
  postalCode     String
  postalLocation String
  postalBox      Int?
  latitude       Float
  longitude      Float
  stationId      Int                      @unique
  station        Station                  @relation(fields: [stationId], references: [id])
}

model StationAccommodationType {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @unique
  description          String?
  StationAccommodation StationAccommodation[]
}

model StationPier {
  id                Int                           @id @default(autoincrement())
  length            Int
  width             Int
  minimumDepth      Int
  StationPierType   StationPierType?              @relation(fields: [stationPierTypeId], references: [id])
  stationPierTypeId Int?
  floating          Boolean                       @default(false)
  electricalSystem  StationPierElictricalSystem[]
  diesel            Boolean                       @default(false)
  petrol            Boolean                       @default(false)
  storageSpace      Boolean                       @default(false)
  coldWater         Boolean                       @default(false)
  hotWater          Boolean                       @default(false)
  stationId         Int                           @unique
  station           Station                       @relation(fields: [stationId], references: [id])
}

model StationPierType {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  StationPier StationPier[]
}

model StationPierElictricalSystem {
  id            Int          @id @default(autoincrement())
  name          String
  description   String?
  StationPier   StationPier? @relation(fields: [stationPierId], references: [id])
  stationPierId Int?
}

model StationAgreement {
  id        Int                  @id @default(autoincrement())
  name      String               @unique
  startDate DateTime
  endDate   DateTime
  type      StationAgreementType @relation(fields: [typeId], references: [id])
  typeId    Int
  stations  Station[]
}

model StationAgreementType {
  id          Int                @id @default(autoincrement())
  name        String             @unique
  description String?
  agreements  StationAgreement[]
}
